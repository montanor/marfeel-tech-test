AWSTemplateFormatVersion: 2010-09-09
Description: This CloudFormation template contains the blueprint for deploying the infrastructure resources requested in the marfeel sysadmin Bogota position test, contains an instance with HAproxy as load balancer for an Autoscaling group in charge of an app-server hosting a Python application. David MontaÃ±o - daalmore@gmail.com

Resources:
  HAproxySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: haproxy-secgroup
      GroupDescription: Security group for the HAproxy intance
      VpcId: vpc-b33ad5ca
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 190.216.159.17/32

  HAproxyInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: HAproxy-ec2
      ImageId: ami-6d48500b
      InstanceType: t2.nano
      SecurityGroupIds:
        - !Ref HAproxySecurityGroup
      UserData: !Base64 |
        #!/bin/bash -ex
        # This script will configure haproxy and prepare the instance to use the auto-add-instances script
        # Install HAproxy
        apt-get update 
        apt-get install -y haproxy unzip
        # Install AWS CLI
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        # Download the autoscaling group register script and template
        cd /etc/haproxy/
        wget -O auto-add-instances.sh https://raw.githubusercontent.com/montanor/marfeel-tech-test/master/haproxy/auto-add-instances.sh
        wget -O haproxy.cfg.template https://raw.githubusercontent.com/montanor/marfeel-tech-test/master/haproxy/haproxy.cfg
        chmod +x auto-add-instances.sh
        echo "*/3 * * * * /etc/haproxy/auto-add-instances.sh > /etc/haproxy/auto-add-log" | tee -a /var/spool/cron/crontabs/root


  AppServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AppServer-secgroup
      GroupDescription: Security group for the app server intance
      VpcId: vpc-b33ad5ca
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 190.216.159.17/32
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 190.216.159.17/32
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          SourceSecurityGroupId: !Ref HAproxySecurityGroup

  AppServerLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: AppServer-launchconfig
      AssociatePublicIpAddress: true
      ImageId: ami-0821d6c83854dbafa
      InstanceType: t2.nano
      KeyName: AppServer-ec2
      SecurityGroups:
        - !Ref AppServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          # Create Nginx Cache folder
          mkdir -p /tmp/nginx/cache
          # Autostart services
          systemctl enable nginx
          systemctl enable webapp
          # Clone the Python app source code
          cd /opt
          git clone https://bitbucket.org/Marfeel/appserverpythontestapp.git
          mv appserverpythontestapp/ test/
          # Start the services
          systemctl start nginx
          systemctl start webapp


  AppServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - eu-west-1c
      LaunchConfigurationName: !Ref AppServerLaunchConfiguration
      MaxSize: 1
      MinSize: 1